// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package mgmt

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// RankStateEventInfo defines extended fields for rank state change related events.
type RankStateEventInfo struct {
	Instance             uint32   `protobuf:"varint,1,opt,name=instance,proto3" json:"instance,omitempty"`
	Errored              bool     `protobuf:"varint,2,opt,name=errored,proto3" json:"errored,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RankStateEventInfo) Reset()         { *m = RankStateEventInfo{} }
func (m *RankStateEventInfo) String() string { return proto.CompactTextString(m) }
func (*RankStateEventInfo) ProtoMessage()    {}
func (*RankStateEventInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

func (m *RankStateEventInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RankStateEventInfo.Unmarshal(m, b)
}
func (m *RankStateEventInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RankStateEventInfo.Marshal(b, m, deterministic)
}
func (m *RankStateEventInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RankStateEventInfo.Merge(m, src)
}
func (m *RankStateEventInfo) XXX_Size() int {
	return xxx_messageInfo_RankStateEventInfo.Size(m)
}
func (m *RankStateEventInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RankStateEventInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RankStateEventInfo proto.InternalMessageInfo

func (m *RankStateEventInfo) GetInstance() uint32 {
	if m != nil {
		return m.Instance
	}
	return 0
}

func (m *RankStateEventInfo) GetErrored() bool {
	if m != nil {
		return m.Errored
	}
	return false
}

func (m *RankStateEventInfo) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// PoolSvcEventInfo defines extended fields for pool service change events.
type PoolSvcEventInfo struct {
	PoolUuid             string   `protobuf:"bytes,1,opt,name=pool_uuid,json=poolUuid,proto3" json:"pool_uuid,omitempty"`
	SvcReps              []uint32 `protobuf:"varint,2,rep,packed,name=svc_reps,json=svcReps,proto3" json:"svc_reps,omitempty"`
	Version              uint64   `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PoolSvcEventInfo) Reset()         { *m = PoolSvcEventInfo{} }
func (m *PoolSvcEventInfo) String() string { return proto.CompactTextString(m) }
func (*PoolSvcEventInfo) ProtoMessage()    {}
func (*PoolSvcEventInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}

func (m *PoolSvcEventInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PoolSvcEventInfo.Unmarshal(m, b)
}
func (m *PoolSvcEventInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PoolSvcEventInfo.Marshal(b, m, deterministic)
}
func (m *PoolSvcEventInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PoolSvcEventInfo.Merge(m, src)
}
func (m *PoolSvcEventInfo) XXX_Size() int {
	return xxx_messageInfo_PoolSvcEventInfo.Size(m)
}
func (m *PoolSvcEventInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PoolSvcEventInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PoolSvcEventInfo proto.InternalMessageInfo

func (m *PoolSvcEventInfo) GetPoolUuid() string {
	if m != nil {
		return m.PoolUuid
	}
	return ""
}

func (m *PoolSvcEventInfo) GetSvcReps() []uint32 {
	if m != nil {
		return m.SvcReps
	}
	return nil
}

func (m *PoolSvcEventInfo) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

// RASEvent describes a RAS event in the DAOS system.
type RASEvent struct {
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Severity  uint32 `protobuf:"varint,4,opt,name=severity,proto3" json:"severity,omitempty"`
	Msg       string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	Type      uint32 `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Hostname  string `protobuf:"bytes,7,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Rank      uint32 `protobuf:"varint,8,opt,name=rank,proto3" json:"rank,omitempty"`
	Hid       string `protobuf:"bytes,9,opt,name=hid,proto3" json:"hid,omitempty"`
	Pid       string `protobuf:"bytes,10,opt,name=pid,proto3" json:"pid,omitempty"`
	Tid       string `protobuf:"bytes,11,opt,name=tid,proto3" json:"tid,omitempty"`
	Jid       string `protobuf:"bytes,12,opt,name=jid,proto3" json:"jid,omitempty"`
	Puuid     string `protobuf:"bytes,13,opt,name=puuid,proto3" json:"puuid,omitempty"`
	Cuuid     string `protobuf:"bytes,14,opt,name=cuuid,proto3" json:"cuuid,omitempty"`
	Oid       string `protobuf:"bytes,15,opt,name=oid,proto3" json:"oid,omitempty"`
	Cop       string `protobuf:"bytes,16,opt,name=cop,proto3" json:"cop,omitempty"`
	// Types that are valid to be assigned to ExtendedInfo:
	//	*RASEvent_StrInfo
	//	*RASEvent_RankStateInfo
	//	*RASEvent_PoolSvcInfo
	ExtendedInfo         isRASEvent_ExtendedInfo `protobuf_oneof:"extended_info"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RASEvent) Reset()         { *m = RASEvent{} }
func (m *RASEvent) String() string { return proto.CompactTextString(m) }
func (*RASEvent) ProtoMessage()    {}
func (*RASEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{2}
}

func (m *RASEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RASEvent.Unmarshal(m, b)
}
func (m *RASEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RASEvent.Marshal(b, m, deterministic)
}
func (m *RASEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RASEvent.Merge(m, src)
}
func (m *RASEvent) XXX_Size() int {
	return xxx_messageInfo_RASEvent.Size(m)
}
func (m *RASEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_RASEvent.DiscardUnknown(m)
}

var xxx_messageInfo_RASEvent proto.InternalMessageInfo

func (m *RASEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RASEvent) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *RASEvent) GetSeverity() uint32 {
	if m != nil {
		return m.Severity
	}
	return 0
}

func (m *RASEvent) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *RASEvent) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *RASEvent) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *RASEvent) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *RASEvent) GetHid() string {
	if m != nil {
		return m.Hid
	}
	return ""
}

func (m *RASEvent) GetPid() string {
	if m != nil {
		return m.Pid
	}
	return ""
}

func (m *RASEvent) GetTid() string {
	if m != nil {
		return m.Tid
	}
	return ""
}

func (m *RASEvent) GetJid() string {
	if m != nil {
		return m.Jid
	}
	return ""
}

func (m *RASEvent) GetPuuid() string {
	if m != nil {
		return m.Puuid
	}
	return ""
}

func (m *RASEvent) GetCuuid() string {
	if m != nil {
		return m.Cuuid
	}
	return ""
}

func (m *RASEvent) GetOid() string {
	if m != nil {
		return m.Oid
	}
	return ""
}

func (m *RASEvent) GetCop() string {
	if m != nil {
		return m.Cop
	}
	return ""
}

type isRASEvent_ExtendedInfo interface {
	isRASEvent_ExtendedInfo()
}

type RASEvent_StrInfo struct {
	StrInfo string `protobuf:"bytes,17,opt,name=str_info,json=strInfo,proto3,oneof"`
}

type RASEvent_RankStateInfo struct {
	RankStateInfo *RankStateEventInfo `protobuf:"bytes,18,opt,name=rank_state_info,json=rankStateInfo,proto3,oneof"`
}

type RASEvent_PoolSvcInfo struct {
	PoolSvcInfo *PoolSvcEventInfo `protobuf:"bytes,19,opt,name=pool_svc_info,json=poolSvcInfo,proto3,oneof"`
}

func (*RASEvent_StrInfo) isRASEvent_ExtendedInfo() {}

func (*RASEvent_RankStateInfo) isRASEvent_ExtendedInfo() {}

func (*RASEvent_PoolSvcInfo) isRASEvent_ExtendedInfo() {}

func (m *RASEvent) GetExtendedInfo() isRASEvent_ExtendedInfo {
	if m != nil {
		return m.ExtendedInfo
	}
	return nil
}

func (m *RASEvent) GetStrInfo() string {
	if x, ok := m.GetExtendedInfo().(*RASEvent_StrInfo); ok {
		return x.StrInfo
	}
	return ""
}

func (m *RASEvent) GetRankStateInfo() *RankStateEventInfo {
	if x, ok := m.GetExtendedInfo().(*RASEvent_RankStateInfo); ok {
		return x.RankStateInfo
	}
	return nil
}

func (m *RASEvent) GetPoolSvcInfo() *PoolSvcEventInfo {
	if x, ok := m.GetExtendedInfo().(*RASEvent_PoolSvcInfo); ok {
		return x.PoolSvcInfo
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RASEvent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RASEvent_StrInfo)(nil),
		(*RASEvent_RankStateInfo)(nil),
		(*RASEvent_PoolSvcInfo)(nil),
	}
}

// ClusterEventReq communicates occurrence of a RAS event in the DAOS system.
type ClusterEventReq struct {
	Sequence             uint64    `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Event                *RASEvent `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ClusterEventReq) Reset()         { *m = ClusterEventReq{} }
func (m *ClusterEventReq) String() string { return proto.CompactTextString(m) }
func (*ClusterEventReq) ProtoMessage()    {}
func (*ClusterEventReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{3}
}

func (m *ClusterEventReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterEventReq.Unmarshal(m, b)
}
func (m *ClusterEventReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterEventReq.Marshal(b, m, deterministic)
}
func (m *ClusterEventReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterEventReq.Merge(m, src)
}
func (m *ClusterEventReq) XXX_Size() int {
	return xxx_messageInfo_ClusterEventReq.Size(m)
}
func (m *ClusterEventReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterEventReq.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterEventReq proto.InternalMessageInfo

func (m *ClusterEventReq) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *ClusterEventReq) GetEvent() *RASEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

// RASEventResp acknowledges receipt of an event notification and an error
// status. Acknowledgement does not indicate that the event was handled.
type ClusterEventResp struct {
	Sequence             uint64   `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterEventResp) Reset()         { *m = ClusterEventResp{} }
func (m *ClusterEventResp) String() string { return proto.CompactTextString(m) }
func (*ClusterEventResp) ProtoMessage()    {}
func (*ClusterEventResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{4}
}

func (m *ClusterEventResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterEventResp.Unmarshal(m, b)
}
func (m *ClusterEventResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterEventResp.Marshal(b, m, deterministic)
}
func (m *ClusterEventResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterEventResp.Merge(m, src)
}
func (m *ClusterEventResp) XXX_Size() int {
	return xxx_messageInfo_ClusterEventResp.Size(m)
}
func (m *ClusterEventResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterEventResp.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterEventResp proto.InternalMessageInfo

func (m *ClusterEventResp) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *ClusterEventResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*RankStateEventInfo)(nil), "mgmt.RankStateEventInfo")
	proto.RegisterType((*PoolSvcEventInfo)(nil), "mgmt.PoolSvcEventInfo")
	proto.RegisterType((*RASEvent)(nil), "mgmt.RASEvent")
	proto.RegisterType((*ClusterEventReq)(nil), "mgmt.ClusterEventReq")
	proto.RegisterType((*ClusterEventResp)(nil), "mgmt.ClusterEventResp")
}

func init() {
	proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e)
}

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 495 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xcf, 0x6e, 0x13, 0x31,
	0x10, 0xc6, 0x9b, 0xff, 0xbb, 0x13, 0x36, 0x09, 0x06, 0x55, 0x86, 0x72, 0x88, 0x22, 0x0e, 0x39,
	0xe5, 0x50, 0xae, 0x5c, 0x28, 0x02, 0x85, 0x1b, 0x72, 0xc4, 0x39, 0x2c, 0x6b, 0xb7, 0x71, 0x9b,
	0xb5, 0x5d, 0xdb, 0xbb, 0xa2, 0xaf, 0xcd, 0x13, 0x20, 0xcf, 0x64, 0x5b, 0x01, 0x12, 0x37, 0x7f,
	0xbf, 0xf5, 0x7c, 0x33, 0x9e, 0x99, 0x85, 0xa9, 0x6a, 0x95, 0x89, 0x1b, 0xe7, 0x6d, 0xb4, 0x6c,
	0x58, 0xdf, 0xd4, 0x71, 0xf5, 0x1d, 0x98, 0x28, 0xcd, 0xdd, 0x2e, 0x96, 0x51, 0x7d, 0x4a, 0x5f,
	0xbf, 0x98, 0x6b, 0xcb, 0x5e, 0x43, 0xa6, 0x4d, 0x88, 0xa5, 0xa9, 0x14, 0xef, 0x2d, 0x7b, 0xeb,
	0x42, 0x3c, 0x6a, 0xc6, 0x61, 0xa2, 0xbc, 0xb7, 0x5e, 0x49, 0xde, 0x5f, 0xf6, 0xd6, 0x99, 0xe8,
	0x24, 0x7b, 0x09, 0x23, 0x3c, 0xf2, 0xc1, 0xb2, 0xb7, 0xce, 0x05, 0x89, 0x95, 0x84, 0xc5, 0x57,
	0x6b, 0x8f, 0xbb, 0xb6, 0x7a, 0xf2, 0xbf, 0x80, 0xdc, 0x59, 0x7b, 0xdc, 0x37, 0x8d, 0x96, 0x98,
	0x20, 0x17, 0x59, 0x02, 0xdf, 0x1a, 0x2d, 0xd9, 0x2b, 0xc8, 0x42, 0x5b, 0xed, 0xbd, 0x72, 0x81,
	0xf7, 0x97, 0x83, 0x75, 0x21, 0x26, 0xa1, 0xad, 0x84, 0x72, 0x21, 0xe5, 0x6e, 0x95, 0x0f, 0xda,
	0x1a, 0xcc, 0x31, 0x14, 0x9d, 0x5c, 0xfd, 0x1a, 0x40, 0x26, 0x3e, 0xec, 0x30, 0x05, 0x9b, 0x41,
	0x5f, 0x53, 0x75, 0xb9, 0xe8, 0x6b, 0xc9, 0xde, 0x40, 0x1e, 0x75, 0xad, 0x42, 0x2c, 0x6b, 0x77,
	0x2a, 0xee, 0x09, 0xa4, 0xc7, 0x06, 0xd5, 0x2a, 0xaf, 0xe3, 0x03, 0x1f, 0xd2, 0x63, 0x3b, 0xcd,
	0x16, 0x30, 0xa8, 0xc3, 0x0d, 0x1f, 0x61, 0x4c, 0x3a, 0x32, 0x06, 0xc3, 0xf8, 0xe0, 0x14, 0x1f,
	0xe3, 0x4d, 0x3c, 0x27, 0x87, 0x83, 0x0d, 0xd1, 0x94, 0xb5, 0xe2, 0x13, 0x7a, 0x4d, 0xa7, 0xd3,
	0x7d, 0x5f, 0x9a, 0x3b, 0x9e, 0xd1, 0xfd, 0x74, 0x4e, 0xae, 0x07, 0x2d, 0x79, 0x4e, 0xae, 0x07,
	0x2d, 0x13, 0x71, 0x5a, 0x72, 0x20, 0xe2, 0x88, 0x44, 0x2d, 0xf9, 0x94, 0x48, 0x24, 0x72, 0xab,
	0x25, 0x7f, 0x46, 0xe4, 0x56, 0x63, 0xc3, 0x1d, 0xb6, 0xb0, 0xa0, 0x86, 0xa3, 0x48, 0xb4, 0x42,
	0x3a, 0x23, 0x8a, 0x22, 0x45, 0x5b, 0x2d, 0xf9, 0x9c, 0xa2, 0x2d, 0x91, 0xca, 0x3a, 0xbe, 0x20,
	0x52, 0x59, 0xc7, 0x2e, 0x20, 0x0b, 0xd1, 0xef, 0xb5, 0xb9, 0xb6, 0xfc, 0x79, 0xc2, 0xdb, 0x33,
	0x31, 0x09, 0xd1, 0xe3, 0xcc, 0xae, 0x60, 0x9e, 0x8a, 0xdf, 0x87, 0xb4, 0x2a, 0x74, 0x87, 0x2d,
	0x7b, 0xeb, 0xe9, 0x25, 0xdf, 0xa4, 0x4d, 0xda, 0xfc, 0xbb, 0x46, 0xdb, 0x33, 0x51, 0xf8, 0x8e,
	0xa2, 0xc7, 0x7b, 0x28, 0x70, 0xee, 0x69, 0xbe, 0xe8, 0xf0, 0x02, 0x1d, 0xce, 0xc9, 0xe1, 0xef,
	0x35, 0xd9, 0x9e, 0x89, 0xa9, 0x23, 0x96, 0xe4, 0xd5, 0x1c, 0x0a, 0xf5, 0x33, 0x2a, 0x23, 0x95,
	0xc4, 0xe8, 0xd5, 0x0e, 0xe6, 0x1f, 0x8f, 0x4d, 0x88, 0xca, 0x63, 0x8c, 0x50, 0xf7, 0x34, 0xcc,
	0xfb, 0x46, 0x75, 0x9b, 0x3b, 0x14, 0x8f, 0x9a, 0xbd, 0x85, 0x11, 0xfe, 0x00, 0xb8, 0x19, 0xd3,
	0xcb, 0xd9, 0xa9, 0xee, 0xd3, 0xd6, 0x08, 0xfa, 0xb8, 0xfa, 0x0c, 0x8b, 0x3f, 0x4d, 0x83, 0xfb,
	0xaf, 0xeb, 0x39, 0x8c, 0x53, 0x4b, 0x9a, 0x80, 0xb6, 0x23, 0x71, 0x52, 0x3f, 0xc6, 0xf8, 0x9b,
	0xbd, 0xfb, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x78, 0x43, 0xd8, 0xb2, 0x75, 0x03, 0x00, 0x00,
}
