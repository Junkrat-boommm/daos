//
// (C) Copyright 2019 Intel Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// GOVERNMENT LICENSE RIGHTS-OPEN SOURCE SOFTWARE
// The Government's rights to use, modify, reproduce, release, perform, display,
// or disclose this software are subject to the terms of the Apache License as
// provided in Contract No. 8F-30005.
// Any reproduction of computer software, computer software documentation, or
// portions thereof marked with this legend must also reproduce the markings.
//

syntax = "proto3";
package mgmt;

// Management Service Protobuf Definitions related to interactions between
// DAOS control server and DAOS Blob I/O (BIO) module and Per-Server Metadata
// (SMD).

message BioHealthReq {
	string dev_uuid = 1;
	string tgt_id = 2;
}

// BioHealthResp mirrors bio_dev_state structure.
message BioHealthResp {
	string bds_model = 1;
	string bds_serial = 2;
	uint64 bds_timestamp = 3;
	uint64 bds_error_count = 4;
	// Device health details
	uint32 bds_warn_temp_time = 5;
	uint32 bds_crit_temp_time = 6;
	uint64 bds_ctrl_busy_time = 7;
	uint64 bds_power_cycles = 8;
	uint64 bds_power_on_hours = 9;
	uint64 bds_unsafe_shutdowns = 10;
	uint64 bds_media_errors = 11;
	uint64 bds_error_log_entries = 12;
	// I/O error counters
	uint32 bds_bio_read_errs = 13;
	uint32 bds_bio_write_errs = 14;
	uint32 bds_bio_unmap_errs = 15;
	uint32 bds_checksum_errs = 16;
	uint32 bds_temperature = 17; // in Kelvin
	// Critical warnings
	bool bds_temp_warning = 18;
	bool bds_avail_spare_warning = 19;
	bool bds_dev_reliability_warning = 20;
	bool bds_read_only_warning = 21;
	bool bds_volatile_mem_warning = 22; // volatile memory backup
	int32 status = 23; // DAOS error code
	string dev_uuid = 24; // UUID of blobstore
}

message SmdDevReq {
}

message SmdDevResp {
	message Device {
		string uuid = 1; // UUID of blobstore
		repeated int32 tgt_ids = 2; // VOS target IDs
		string state = 3; // NORMAL or FAULTY
	}
	int32 status = 1;
	repeated Device devices = 2;
}

message SmdPoolReq {
}

message SmdPoolResp {
	message Pool {
		string uuid = 1; // UUID of VOS pool
		repeated int32 tgt_ids = 2; // VOS target IDs
		repeated uint64 blobs = 3; // SPDK blobs
	}
	int32 status = 1;
	repeated Pool pools = 2;
}

message DevStateReq {
	string dev_uuid = 1; // UUID of blobstore
}

message DevStateResp {
	int32 status = 1; // DAOS error code
	string dev_uuid = 2; // UUID of blobstore
	string dev_state=3; //NORMAL or FAULTY
}

message SmdQueryReq {
	bool omitDevices = 1; // query should omit devices
	bool omitPools = 2; // query should omit pools
	bool includeBioHealth = 3; // query should include BIO health for devices
	bool setFaulty = 4; // set the specified device to FAULTY
	string uuid = 5; // constrain query to this UUID (pool or device)
	uint32 rank = 6; // response should only include information about this rank
	string target = 7; // response should only include information about this VOS target
}

message SmdQueryResp {
	message Device {
		string uuid = 1; // UUID of blobstore
		repeated int32 tgt_ids = 2; // VOS target IDs
		string state = 3; // NORMAL or FAULTY
		BioHealthResp health = 4; // optional BIO health
	}
	message Pool {
		string uuid = 1; // UUID of VOS pool
		repeated int32 tgt_ids = 2; // VOS target IDs
		repeated uint64 blobs = 3; // SPDK blobs
	}
	message RankResp {
		uint32 rank = 1; // rank to which this response corresponds
		repeated Device devices = 2; // List of devices on the rank
		repeated Pool pools = 3; // List of pools on the rank
	}
	int32 status = 1; // DAOS error code
	repeated RankResp ranks = 2; // List of per-rank responses
}
